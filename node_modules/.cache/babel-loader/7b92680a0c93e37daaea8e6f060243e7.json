{"ast":null,"code":"var _jsxFileName = \"/home/jason/Desktop/projects/feedback-form-frontend/src/CharCounter.js\";\nimport React from 'react';\nconst styles = {\n  counter: {\n    height: 11,\n    position: 'absolute',\n    bottom: -12,\n    right: 0,\n    fontSize: 11,\n    lineHeight: '11px',\n    color: '#C0C0C0'\n  }\n};\n\nclass CharCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueLength: 0\n    };\n  }\n\n  componentDidMount() {\n    const input = this.container.firstChild;\n\n    const setValueLength = () => {\n      this.setState({\n        valueLength: input.value.length\n      });\n    };\n\n    input.addEventListener('keyup', setValueLength);\n    setValueLength();\n  }\n\n  render() {\n    const valueLength = this.state.valueLength;\n    const _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style;\n    const maxLength = children.props.maxLength;\n    return React.createElement(\"div\", {\n      ref: div => this.container = div,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, children, React.createElement(\"span\", {\n      className: \"form-control-character-counter\",\n      style: style ? Object.assign({}, styles.counter, style) : styles.counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, valueLength !== null && valueLength > 0 && maxLength && React.createElement(\"span\", {\n      className: \"character-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, valueLength, \"/\", maxLength)));\n  }\n\n}\n\nCharCounter.defaultProps = {};\nCharacterCounter.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object\n};\nexport default CharCounter;","map":{"version":3,"sources":["/home/jason/Desktop/projects/feedback-form-frontend/src/CharCounter.js"],"names":["React","styles","counter","height","position","bottom","right","fontSize","lineHeight","color","CharCounter","Component","constructor","props","state","valueLength","componentDidMount","input","container","firstChild","setValueLength","setState","value","length","addEventListener","render","children","style","maxLength","div","Object","assign","defaultProps","CharacterCounter","propTypes","PropTypes","element","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,QAAQ,EAAE,UAFH;AAGPC,IAAAA,MAAM,EAAE,CAAC,EAHF;AAIPC,IAAAA,KAAK,EAAE,CAJA;AAKPC,IAAAA,QAAQ,EAAE,EALH;AAMPC,IAAAA,UAAU,EAAE,MANL;AAOPC,IAAAA,KAAK,EAAE;AAPA;AADI,CAAf;;AAYA,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAG,KAAKC,SAAL,CAAeC,UAA7B;;AACA,UAAMC,cAAc,GAAG,MAAM;AAAC,WAAKC,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAEE,KAAK,CAACK,KAAN,CAAYC;AAA1B,OAAd;AAAiD,KAA/E;;AACAN,IAAAA,KAAK,CAACO,gBAAN,CAAuB,OAAvB,EAAgCJ,cAAhC;AACAA,IAAAA,cAAc;AACf;;AAEDK,EAAAA,MAAM,GAAE;AAAA,UAECV,WAFD,GAEgB,KAAKD,KAFrB,CAECC,WAFD;AAAA,wBAGoB,KAAKF,KAHzB;AAAA,UAGCa,QAHD,eAGCA,QAHD;AAAA,UAGWC,KAHX,eAGWA,KAHX;AAIN,UAAMC,SAAS,GAAGF,QAAQ,CAACb,KAAT,CAAee,SAAjC;AAEA,WACE;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAI,KAAKX,SAAL,GAAiBW,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,QADH,EAEE;AAAM,MAAA,SAAS,EAAC,gCAAhB;AAAiD,MAAA,KAAK,EAAEC,KAAK,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9B,MAAM,CAACC,OAAzB,EAAkCyB,KAAlC,CAAH,GAA8C1B,MAAM,CAACC,OAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,WAAW,KAAK,IAAhB,IAAwBA,WAAW,GAAG,CAAtC,IAA2Ca,SAA3C,IACC;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCb,WAAnC,OAAiDa,SAAjD,CAFJ,CAFF,CADF;AAUD;;AA/BuC;;AAkC1ClB,WAAW,CAACsB,YAAZ,GAA2B,EAA3B;AAEAC,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BR,EAAAA,QAAQ,EAAES,SAAS,CAACC,OAAV,CAAkBC,UADD;AAE3BV,EAAAA,KAAK,EAAEQ,SAAS,CAACG;AAFU,CAA7B;AAKA,eAAe5B,WAAf","sourcesContent":["import React from 'react'\n\nconst styles = {\n  counter: {\n    height: 11,\n    position: 'absolute',\n    bottom: -12,\n    right: 0,\n    fontSize: 11,\n    lineHeight: '11px',\n    color: '#C0C0C0',\n  }\n}\n\nclass CharCounter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      valueLength: 0\n    }\n  }\n\n  componentDidMount() {\n    const input = this.container.firstChild\n    const setValueLength = () => {this.setState({valueLength: input.value.length})}\n    input.addEventListener('keyup', setValueLength)\n    setValueLength()\n  }\n\n  render(){\n\n    const {valueLength} = this.state\n    const {children, style} = this.props\n    const maxLength = children.props.maxLength\n\n    return(\n      <div ref={div => this.container = div}>\n        {children}\n        <span className='form-control-character-counter' style={style ? Object.assign({}, styles.counter, style) : styles.counter}>\n          {valueLength !== null && valueLength > 0 && maxLength &&\n            <span className='character-count'>{valueLength}/{maxLength}</span>\n          }\n        </span>\n      </div>\n    )\n  }\n}\n\nCharCounter.defaultProps = {}\n\nCharacterCounter.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object,\n}\n\nexport default CharCounter;"]},"metadata":{},"sourceType":"module"}